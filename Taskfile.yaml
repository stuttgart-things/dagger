---
version: 3
vars:
  PROJECT_NAME:
    sh: echo ${PWD##*/}
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD); else echo main ; fi

tasks:
  create:
    desc: Create new dagger module
    cmds:
      - dagger init --sdk=go --source=./{{ .MODULE }} --name={{ .MODULE }}
      - jq '.source = "."' dagger.json > tmp.json && mv tmp.json dagger.json
      - mv dagger.json ./{{ .MODULE }}/dagger.json

  test-crossplane:
    desc: Test crossplame modules
    cmds:
      - dagger call -m ./{{ .MODULE }} init-package --name test --progress plain export --path={{ .OUTPUT_DIR }}
      - dagger call -m ./{{ .MODULE }} package --src {{ .TEST_PACKAGE }} --progress plain export --path={{ .OUTPUT_DIR_PACKAGE }}
    vars:
      MODULE: crossplane
      TEST_PACKAGE: tests/registry
      OUTPUT_DIR: /tmp/crossplane
      OUTPUT_DIR_PACKAGE: /tmp/crossplane/package

  test-go:
    desc: Test go modules
    cmds:
      - dagger call -m ./{{ .MODULE }} lint --src {{ .TEST_GO_CODE }} --progress plain || true
      - dagger call -m ./{{ .MODULE }} build --src {{ .TEST_GO_CODE }} --progress plain export --path={{ .OUTPUT_DIR }} && ls -lta {{ .OUTPUT_DIR }} && rm -rf {{ .OUTPUT_DIR }}
      - dagger call -m ./{{ .MODULE }} run/home/sthings/projects/dagger/helm/internal-pipeline --src {{ .TEST_GO_CODE }} --progress plain || true
    vars:
      MODULE: go
      TEST_GO_CODE: tests/calculator/
      OUTPUT_DIR: /tmp/calc

  test-helm:
    desc: Test helm modules
    cmds:
      - dagger call -m {{ .MODULE }} lint --src {{ .TEST_CHART }} --progress plain
      - dagger call -m {{ .MODULE }} template --src {{ .TEST_CHART }} --progress plain
      - dagger call -m {{ .MODULE }} package --src {{ .TEST_CHART }} --progress plain export --path={{ .TEST_PACKAGE }} && rm -rf {{ .TEST_PACKAGE }}
      - dagger call -m {{ .MODULE }} run-pipeline --src {{ .TEST_CHART }} --progress plain
    vars:
      MODULE: helm
      TEST_CHART: tests/test-chart/
      TEST_PACKAGE: tests/chart.tgz

  branch:
    desc: Create branch from main
    cmds:
      - git checkout main
      - git branch
      - git pull
      - |
        echo "Enter to be created (remote) branch:"
        read BRANCH_NAME;
        git checkout -b ${BRANCH_NAME}
        git push origin ${BRANCH_NAME}
      - git branch
      - git branch --set-upstream-to=origin/main ${BRANCH_NAME}

  commit:
    desc: Commit + push code into branch
    cmds:
      - rm -rf dist/
      - git branch --set-upstream-to=origin/{{ .BRANCH }}
      - git pull
      - |
        git add *
        if [[ -n $(git status --porcelain) ]]; then
          echo "ENTER COMMIT MESSAGE"
          read COMMIT_MESSAGE;
          echo "COMMITTING CHANGES"
          git commit --allow-empty -a -m "$(echo ${COMMIT_MESSAGE})"
        else
          echo "NO CHANGES"
        fi
        git push origin -u {{ .BRANCH }}

  pr:
    desc: Create pull request into main
    cmds:
      - task: commit
      - gh pr create -t "{{ .BRANCH }}" -b "{{ .BRANCH }} branch into main"
      - sleep 10s
      #- gh pr checks $(gh pr list | grep "^[^#;]" | awk '{print $1}') --watch
      - gh pr merge $(gh pr list | grep "^[^#;]" | awk '{print $1}') --auto --rebase --delete-branch
      - git checkout main && git pull